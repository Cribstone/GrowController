/*
    secretary.js
*/

/*
    REQUIRES
 */

var engineFile = require('./engine.js');

/*
    INSTANTIATIONS
 */

var that = this;

var engine = new engineFile.Engine();

var prop =
{
	flag: -1
};

/*
    EXPORTS
 */

exports.flag = function(flag)
{
	prop.flag = flag;

	return that;
}

/*
	 Argument Rules:
	 1. First argument is always the output string.
	 2. Any extra arguments are assumed to be data that's to be formatted into the string.
	 3. All formatting rules are those that apply to util.format.
 */
exports.log = function()
{
    // Determine flag level
	var flag = null;

	if(prop.flag !== -1)
	{
		flag = prop.flag;

		// Reset flag declaration
		prop.flag = -1;
	}
	else
	{
		flag = engine.minRunningFlag;
	}

	// Process input
	if(flag >= engine.minRunningFlag && flag <= engine.maxRunningFlag)
	{
		var output = engine.process(arguments);

		console.log(output);
	}
};

exports.configure = function(config)
{
    // Flag level range

    if(config.minFlag)
        engine.setMinFlag(config.minFlag);

    if(config.maxFlag)
        engine.setMaxFlag(config.maxFlag);

	// Running flag range

	setRunningFlagRange(config.minRunningFlag, config.maxRunningFlag);
};

/*
	UTILITIES
 */

function setRunningFlagRange(opt_minRunningFlag, opt_maxRunningFlag)
{
	engine.minRunningFlag = (opt_minRunningFlag && engine.isValidFlag(opt_minRunningFlag)) ? opt_minRunningFlag : engine.minFlag;

	engine.maxRunningFlag = (opt_maxRunningFlag && engine.isValidFlag(opt_maxRunningFlag)) ? opt_maxRunningFlag : engine.maxFlag;
};